<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog</id>
    <title>柳小白 Blog</title>
    <updated>2022-07-06T06:00:00Z</updated>
    <generator>Feed for Node.js</generator>
    <link rel="alternate" href="https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog"/>
    <subtitle>The best place to stay up-to-date with the latest 柳小白 news and events.</subtitle>
    <logo>https://github.com/stupidWall/liuxiaobai/liuxiaobai/</logo>
    <rights>Copyright © 2019 liuxiaobai</rights>
    <entry>
        <title type="html"><![CDATA[TypeScript学习笔记 - 枚举]]></title>
        <id>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2022/07/06/枚举.html</id>
        <link href="https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2022/07/06/枚举.html">
        </link>
        <updated>2022-07-06T06:00:00Z</updated>
        <summary type="html"><![CDATA[<h3><a class="anchor" aria-hidden="true" id="枚举"></a><a href="#枚举" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>枚举</h3> <p><a href="https://codepen.io/stupidWall/pen/pXOQdN?editors=0010">戳我试试</a></p> <h4><a class="anchor" aria-hidden="true" id="数字枚举"></a><a href="#数字枚举" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>数字枚举</h4> <p>假设后台定义三个状态：</p> <p><code>1</code> 待支付 <code>2</code> 待发货 <code>3</code> 已完成</p> <p>前端使用的时候，如果整个项目中到处都是<code>1</code>、<code>2</code>、<code>3</code>, 有个问题就是不够语义，维护起来时间成本也较高， 想办法映射成变量：</p> <pre><code class="hljs css language-javascript">enum Status { outPay = <span class="hljs-number">1</span>, outDelivery = <span class="hljs-number">2</span>, done = <span class="hljs-number">3</span> } </code></pre> <p>当使用都时候，可以判断<code>Status.outPay === status</code>即可</p> <p>针对数字枚举，还有一个反向映射， 即<code>Status[1]</code>值是<code>outPay</code></p> <p>打印出<code>Status</code>可以看到</p> <p><img src="https://raw.githubusercontent.com/stupidWall/liuxiaobai/master/img/blog/2019/20190706195943.jpg" width="600"></p> <h4><a class="anchor" aria-hidden="true" id="字符串枚举"></a><a href="#字符串枚举" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>字符串...</h4>]]></summary>
        <author>
            <name>何柳杰</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[TypeScript学习笔记 - 泛型]]></title>
        <id>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2021/07/06/泛型.html</id>
        <link href="https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2021/07/06/泛型.html">
        </link>
        <updated>2021-07-06T06:00:00Z</updated>
        <summary type="html"><![CDATA[<h3><a class="anchor" aria-hidden="true" id="泛型"></a><a href="#泛型" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>泛型</h3> <p>解决函数传入参数类型与函数返回值类型一致的问题。</p> <p>一个函数，我希望传入数字，返回数字；传入字符串，返回字符串， 即</p> <pre><code class="hljs css language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fn1</span> (<span class="hljs-params">a: number</span>): <span class="hljs-title">number</span> </span>{ <span class="hljs-keyword">return</span> a + <span class="hljs-number">1</span> } <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fn2</span> (<span class="hljs-params">b: string</span>): <span class="hljs-title">string</span> </span>{ <span class="hljs-keyword">return</span> b + <span class="hljs-string">' :fn2'</span> } </code></pre> <p>有没有支持不同类型的方式，any</p> <pre><code class="hljs css language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fn3</span> (<span class="hljs-params">c: any</span>): <span class="hljs-title">any</span> </span>{ <span class="hljs-keyword">return</span> c } </code></pre> <p>可是使用any，不能保证返回值类型和传入参数类型...</p>]]></summary>
        <author>
            <name>何柳杰</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[每天看开源项目学一招半式 - 格式化日期]]></title>
        <id>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2020/07/06/格式化日期.html</id>
        <link href="https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2020/07/06/格式化日期.html">
        </link>
        <updated>2020-07-06T06:00:00Z</updated>
        <summary type="html"><![CDATA[<h3><a class="anchor" aria-hidden="true" id="代码如下"></a><a href="#代码如下" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>代码如下</h3> <p><a href="https://github.com/didi/cube-ui/blob/dev/src/common/lang/date.js">开源项目链接地址</a></p> <pre><code class="hljs css language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">formatType</span>(<span class="hljs-params">type, format, value, regExpAttributes</span>) </span>{ <span class="hljs-keyword">const</span> regExpMap = { <span class="hljs-attr">year</span>: <span class="hljs-string">'(Y+)'</span>, <span class="hljs-attr">month</span>: <span class="hljs-string">'(M+)'</span>, <span class="hljs-attr">date</span>: <span class="hljs-string">'(D+)'</span>, <span class="hljs-attr">hour</span>: <span class="hljs-string">'(h+)'</span>, <span class="hljs-attr">minute</span>: <span class="hljs-string">'(m+)'</span>, <span class="hljs-attr">second</span>: <span class="hljs-string">'(s+)'</span>, <span class="hljs-attr">quarter</span>: <span class="hljs-string">'(q+)'</span>, <span class="hljs-attr">millisecond</span>: <span class="hljs-string">'(S)'</span> } <span class="hljs-keyword">if</span> (<span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(regExpMap[typ...</code></pre>]]></summary>
        <author>
            <name>何柳杰</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[每天看开源项目学一招半式 - 中横线转驼峰变量]]></title>
        <id>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/07/05/驼峰.html</id>
        <link href="https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/07/05/驼峰.html">
        </link>
        <updated>2019-07-05T06:00:00Z</updated>
        <summary type="html"><![CDATA[<p><a href="https://github.com/didi/cube-ui/blob/dev/src/common/lang/string.js">开源项目链接地址</a></p> <h3><a class="anchor" aria-hidden="true" id="代码如下"></a><a href="#代码如下" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>代码如下：</h3> <pre><code class="hljs css language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">camelize</span> (<span class="hljs-params">str</span>) </span>{ str = <span class="hljs-built_in">String</span>(str) <span class="hljs-keyword">return</span> str.replace(<span class="hljs-regexp">/-(\w)/g</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">m, c</span>) </span>{ <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'m：'</span>,m,<span class="hljs-string">'c：'</span>,c) <span class="hljs-keyword">return</span> c ? c.toUpperCase() : <span class="hljs-string">''</span> }) } </code></pre> <h4><a class="anchor" aria-hidden="true" id="正则-w-g"></a><a href="#正则-w-g" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>正则<code>/-(\w)/g</code></h4> <ul> <li><code>g</code> 全局匹配</li> <li><code>()</code> 匹配 <code>pattern</code> 并获取这一匹配。所获取的匹配可以从产生的Matches集合得到</li> <li><code>\w</code> 匹配包括...</li></ul>]]></summary>
        <author>
            <name>何柳杰</name>
        </author>
    </entry>
</feed>