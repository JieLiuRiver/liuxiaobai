<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>柳小白 Blog</title>
        <link>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog</link>
        <description>The best place to stay up-to-date with the latest 柳小白 news and events.</description>
        <lastBuildDate>Fri, 21 Aug 2020 06:00:00 GMT</lastBuildDate>
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        <generator>Feed for Node.js</generator>
        <image>
            <title>柳小白 Blog</title>
            <url>https://github.com/stupidWall/liuxiaobai/liuxiaobai/</url>
            <link>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog</link>
        </image>
        <copyright>Copyright © 2019 liuxiaobai</copyright>
        <item>
            <title><![CDATA[iview]]></title>
            <link>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2020/08/21/vue.html</link>
            <guid>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2020/08/21/vue.html</guid>
            <pubDate>Fri, 21 Aug 2020 06:00:00 GMT</pubDate>
            <description><![CDATA[<h3><a class="anchor" aria-hidden="true" id="动态组件"></a><a href="#动态组件" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>动态组件</h3> <pre><code class="hljs css language-javascript">&lt;component :is=<span class="hljs-string">"wrapperComponent"</span>&gt; <span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">component</span>&gt;</span></span> ... computed: { wrapperComponent() { <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.affix ? <span class="hljs-string">'Affix'</span> : <span class="hljs-string">'div'</span>; } } </code></pre> <h3><a class="anchor" aria-hidden="true" id="匹配锚点"></a><a href="#匹配锚点" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>匹配锚点</h3> <pre><code class="hljs css language-javascript"><span class="hljs-keyword">var</span> reg = <span class="hljs-regexp">/#([^#]+)$/</span> <span class="hljs-keyword">var</span> match = reg.exec(<span class="hljs-string">'https://www.iviewui.com/components/anchor#AnchorLink_prop...</span></code></pre>]]></description>
        </item>
        <item>
            <title><![CDATA[对象转内联样式]]></title>
            <link>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2020/08/15/对象转内联样式.html</link>
            <guid>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2020/08/15/对象转内联样式.html</guid>
            <pubDate>Sat, 15 Aug 2020 06:00:00 GMT</pubDate>
            <description><![CDATA[<h3><a class="anchor" aria-hidden="true" id="源码链接"></a><a href="#源码链接" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>源码链接</h3> <p><a href="https://github.com/NervJS/taro/blob/master/packages/taro/src/internal/inline-style.js">跳转</a></p> <h3><a class="anchor" aria-hidden="true" id="代码"></a><a href="#代码" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>代码</h3> <pre><code class="hljs css language-javascript"><span class="hljs-keyword">const</span> upperCasePattern = <span class="hljs-regexp">/([A-Z])/g</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dashify</span> (<span class="hljs-params">str</span>) </span>{ <span class="hljs-keyword">return</span> str.replace(upperCasePattern, dashLower) } <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dashLower</span> (<span class="hljs-params">c</span>) </span>{ <span class="hljs-keyword">return</span> <span class="hljs-string">'-'</span> + c.toLowerCase() } <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isObject</span> (<span class="hljs-params">val</span>) </span>{ <span class="hljs-keyword">return</span> val != <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-keyword">typeof</span> val === <span class="hljs-string">'...</span></code></pre>]]></description>
        </item>
        <item>
            <title><![CDATA[实现一个简单的vuex]]></title>
            <link>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/10/08/vuex.html</link>
            <guid>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/10/08/vuex.html</guid>
            <pubDate>Tue, 08 Oct 2019 06:00:00 GMT</pubDate>
            <description><![CDATA[<h3><a class="anchor" aria-hidden="true" id="分析"></a><a href="#分析" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>分析</h3> <ul> <li><code>vuex</code>导出一个<code>install</code>方法（用来安装插件到vue），一个<code>Store</code>方法(用来实例一个store),</li> </ul> <pre><code class="hljs css language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {Store, install} </code></pre> <ul> <li><code>store</code>实例有哪些参数</li> </ul> <pre><code class="hljs css language-javascript"><span class="hljs-keyword">new</span> Vuex.Store({ <span class="hljs-attr">state</span>: { }, <span class="hljs-attr">mutations</span>: { }, <span class="hljs-attr">actions</span>: { } }) </code></pre> <ul> <li><code>install</code>方法，把实例化后的<code>store</code>挂在到<code>vue</code>实例的原型对象下</li> </ul> <pre><code class="hljs css language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">install</span>(<span class="hljs-params">_Vue</span>) </span>{ Vue = _Vue; <span class="hljs-comment">// 混入s...</span></code></pre>]]></description>
        </item>
        <item>
            <title><![CDATA[实现一个简单的vue-router]]></title>
            <link>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/09/30/vue-router.html</link>
            <guid>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/09/30/vue-router.html</guid>
            <pubDate>Mon, 30 Sep 2019 06:00:00 GMT</pubDate>
            <description><![CDATA[<h3><a class="anchor" aria-hidden="true" id="怎么用"></a><a href="#怎么用" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>怎么用</h3> <p><code>router.js</code></p> <pre><code class="hljs css language-javascript"><span class="hljs-keyword">import</span> VueRouter <span class="hljs-keyword">from</span> <span class="hljs-string">'vue-router'</span> <span class="hljs-keyword">import</span> Home <span class="hljs-keyword">from</span> <span class="hljs-string">'./views/home'</span> <span class="hljs-comment">// vue-router 插件形式安装</span> Vue.use(VueRouter) <span class="hljs-comment">// vue-router 实例</span> <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">new</span> VueRouter({ <span class="hljs-attr">routes</span>: [ { <span class="hljs-attr">path</span>: <span class="hljs-string">'/'</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">'home'</span>, <span class="hljs-attr">component</span>: Home } ] }) </code></pre> <p><code>main.js</code></p> <pre><code class="hljs css language-javascript">import route...</code></pre>]]></description>
        </item>
        <item>
            <title><![CDATA[二叉树]]></title>
            <link>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/09/16/tree2.html</link>
            <guid>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/09/16/tree2.html</guid>
            <pubDate>Mon, 16 Sep 2019 06:00:00 GMT</pubDate>
            <description><![CDATA[<h3><a class="anchor" aria-hidden="true" id="二叉树"></a><a href="#二叉树" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>二叉树</h3> <ul> <li>一个根节点</li> <li>每个节点最多只有2个子节点，分别为左节点、右节点</li> </ul> <blockquote> <p>二叉搜索树</p> </blockquote> <ul> <li>左节点比父节点值小</li> </ul> <h3><a class="anchor" aria-hidden="true" id="实现类"></a><a href="#实现类" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>实现类</h3> <ul> <li>创建一个二分树类</li> </ul> <pre><code class="hljs css language-javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Bst</span> </span>{ <span class="hljs-keyword">constructor</span>() { } } </code></pre> <ul> <li>创建一个节点类</li> </ul> <pre><code class="hljs css language-javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Node</span> </span>{ <span class="hljs-keyword">constructor</span>(key) { <span class="hljs-keyword">this</span>.key = key <span class="hljs-keyword">this</span>.left = <span class="hljs-literal">null</span> <span class="hljs-keyword">this</span>.right = <span class="hljs-literal">null</span> <span class="hljs-keyword">this</span>.root = <span class="hljs-literal">null</span> } } </code></pre> <ul> <li><p>往<code>Bst</code>添加值为<code>8</code>的节点</p></li> <li><p>继续<code>Bst</code>添加值为<code>10</code>的节点</p></li> <li><p>继续...</p></li></ul>]]></description>
        </item>
        <item>
            <title><![CDATA[实现链表并应用]]></title>
            <link>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/09/08/linklist.html</link>
            <guid>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/09/08/linklist.html</guid>
            <pubDate>Sun, 08 Sep 2019 06:00:00 GMT</pubDate>
            <description><![CDATA[<h3><a class="anchor" aria-hidden="true" id="定义"></a><a href="#定义" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>定义</h3> <ul> <li><p>猴子捞月</p></li> <li><p>节点组成</p> <ul> <li>节点分为： 数据 ； 下一个的指针</li> </ul></li> <li><p>有首节点、尾节点</p></li> </ul> <blockquote> <p>分析</p> </blockquote> <pre><code class="hljs"><span class="hljs-type">A</span>( <span class="hljs-class"><span class="hljs-keyword">data</span>,</span> next =&gt; <span class="hljs-type">B</span> ) <span class="hljs-type">B</span>( <span class="hljs-class"><span class="hljs-keyword">data</span>,</span> next =&gt; <span class="hljs-type">C</span> ) <span class="hljs-type">C</span>( <span class="hljs-class"><span class="hljs-keyword">data</span>,</span> next =&gt; <span class="hljs-type">D</span> ) <span class="hljs-type">D</span>( <span class="hljs-class"><span class="hljs-keyword">data</span>,</span> next =&gt; <span class="hljs-type">E</span> ) </code></pre> <h4><a class="anchor" aria-hidden="true" id="添加元素a"></a><a href="#添加元素a" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>添加元素A</h4> <ul> <li><p>如果一个都还没有： 头节点 = 新添加的A 尾节点 = 头节点 链表长度+1</p></li> <li><p>如果已经有了 尾节点.next = A 尾节点 = A 链表长度+1</p></li> </ul> <h4><a class="anchor" aria-hidden="true" id="在b节点处插入m节点"></a><a href="#在b节点处插入m节点" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>在B节点处插入M节点</h4> <ul> <li><p>如果B节点是最后一个...</p></li></ul>]]></description>
        </item>
        <item>
            <title><![CDATA[实现栈并应用]]></title>
            <link>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/09/05/stack.html</link>
            <guid>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/09/05/stack.html</guid>
            <pubDate>Thu, 05 Sep 2019 06:00:00 GMT</pubDate>
            <description><![CDATA[<h3><a class="anchor" aria-hidden="true" id="栈的特性"></a><a href="#栈的特性" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>栈的特性</h3> <ul> <li>只能从栈顶操作</li> <li>先进的后出</li> </ul> <h3><a class="anchor" aria-hidden="true" id="数组实现"></a><a href="#数组实现" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>数组实现</h3> <pre><code class="hljs css language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Stack</span>(<span class="hljs-params"></span>) </span>{ <span class="hljs-comment">// 使用数组存储数据</span> <span class="hljs-keyword">var</span> items = []; <span class="hljs-comment">// push方法向栈里压入一个元素</span> <span class="hljs-keyword">this</span>.push = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">item</span>)</span>{ items.push(item); }; <span class="hljs-comment">// pop方法把栈顶的元素弹出</span> <span class="hljs-keyword">this</span>.pop = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{ <span class="hljs-keyword">return</span> items.pop(); }; <span class="hljs-comment">// top 方法返回栈顶元素</span> <span class="hljs-keyword">this</span>.top = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{ <span class="hljs-keyword">return</span> ...</code></pre>]]></description>
        </item>
        <item>
            <title><![CDATA[实现队列并应用]]></title>
            <link>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/09/05/queue.html</link>
            <guid>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/09/05/queue.html</guid>
            <pubDate>Thu, 05 Sep 2019 06:00:00 GMT</pubDate>
            <description><![CDATA[<h3><a class="anchor" aria-hidden="true" id="队列"></a><a href="#队列" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>队列</h3> <ul> <li>先进后出</li> </ul> <pre><code class="hljs css language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Queue</span> (<span class="hljs-params"></span>) </span>{ <span class="hljs-keyword">this</span>.stores = [] } Queue.prototype.enqueue = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">item</span>) </span>{ <span class="hljs-keyword">this</span>.stores.push(item) } Queue.prototype.dequeue = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{ <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.stores.shift() } Queue.prototype.head = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{ <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.stores[<span class="hljs-number">0</span>] } Qu...</code></pre>]]></description>
        </item>
        <item>
            <title><![CDATA[实现一个JSONP]]></title>
            <link>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/08/27/jsonp.html</link>
            <guid>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/08/27/jsonp.html</guid>
            <pubDate>Tue, 27 Aug 2019 06:00:00 GMT</pubDate>
            <description><![CDATA[<h3><a class="anchor" aria-hidden="true" id="代码如下"></a><a href="#代码如下" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>代码如下</h3> <pre><code class="hljs css language-javascript">(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">window,document</span>) </span>{ <span class="hljs-meta"> "use strict"</span>; <span class="hljs-keyword">var</span> jsonp = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">url,data,callback</span>) </span>{ <span class="hljs-comment">// 1.将传入的data数据转化为url字符串形式</span> <span class="hljs-comment">// {id:1,name:'jack'} =&gt; id=1&amp;name=jack</span> <span class="hljs-keyword">var</span> dataString = url.indexof(<span class="hljs-string">'?'</span>) == <span class="hljs-number">-1</span>? <span class="hljs-string">'?'</span>: <span class="hljs-string">'&amp;'</span>; <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> key <span class="hljs-keyword">in</span> data){ dataSt...</code></pre>]]></description>
        </item>
        <item>
            <title><![CDATA[柯里化]]></title>
            <link>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/08/26/柯里化.html</link>
            <guid>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/08/26/柯里化.html</guid>
            <pubDate>Mon, 26 Aug 2019 06:00:00 GMT</pubDate>
            <description><![CDATA[<h3><a class="anchor" aria-hidden="true" id="概念"></a><a href="#概念" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>概念</h3> <p>柯里化是一种将使用多个参数的一个函数转换成一系列使用一个参数的函数的技术， 其实是用闭包把参数保存起来，当参数的数量足够执行函数了，就开始执行函数</p> <h3><a class="anchor" aria-hidden="true" id="实现"></a><a href="#实现" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>实现</h3> <pre><code class="hljs css language-javascript"> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">currying</span>(<span class="hljs-params">fn, ...args</span>) </span>{ <span class="hljs-keyword">if</span> (args.length &gt;= fn.length) { <span class="hljs-keyword">return</span> fn(...args); } <span class="hljs-keyword">else</span> { <span class="hljs-keyword">return</span> <span class="hljs-function">(<span class="hljs-params">...args2</span>) =&gt;</span> currying(fn, ...args, ...args2); } } </code></pre> ]]></description>
        </item>
        <item>
            <title><![CDATA[实现一个Promise]]></title>
            <link>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/08/26/实现一个Promise.html</link>
            <guid>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/08/26/实现一个Promise.html</guid>
            <pubDate>Mon, 26 Aug 2019 06:00:00 GMT</pubDate>
            <description><![CDATA[<p><a href="http://www.conardli.top/docs/JavaScript/%E6%A8%A1%E6%8B%9F%E5%AE%9E%E7%8E%B0promise.html#%E5%9F%BA%E7%A1%80%E7%89%88%E6%9C%AC">文章来源</a></p> <h3><a class="anchor" aria-hidden="true" id="promise-怎么用的"></a><a href="#promise-怎么用的" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a><code>promise</code>怎么用的？</h3> <pre><code class="hljs css language-javascript"><span class="hljs-keyword">var</span> p = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> { resolve(<span class="hljs-string">'hello'</span>) }) p.then(<span class="hljs-function"><span class="hljs-params">v</span> =&gt;</span> { <span class="hljs-built_in">console</span>.log(v) <span class="hljs-comment">// 'hello'</span> }) </code></pre> <h3><a class="anchor" aria-hidden="true" id="分析"></a><a href="#分析" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>分析</h3> <ul> <li><p><code>Promise</code>接受一个函数， 该函数有2参数，分别是<code>resolve</code>、<code>reject</code></p></li> <li><p><code>resolve</code> 将<code>PENDING</code>改变为<code>FULFILLED</code></p></li> <li><p><code>reject</code> 将<code>PENDING</code>改变为<code>REJECTED</code></p></li> <li><p>变为<code>FULFILLED</code>状态后具有一个...</p></li></ul>]]></description>
        </item>
        <item>
            <title><![CDATA[实现一个instanceof]]></title>
            <link>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/08/26/实现instanceof.html</link>
            <guid>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/08/26/实现instanceof.html</guid>
            <pubDate>Mon, 26 Aug 2019 06:00:00 GMT</pubDate>
            <description><![CDATA[<h3><a class="anchor" aria-hidden="true" id="原理"></a><a href="#原理" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>原理</h3> <pre><code class="hljs css language-javascript">a <span class="hljs-keyword">instanceof</span> <span class="hljs-built_in">Object</span> </code></pre> <p>判断Object的prototype是否在a的原型链上</p> <h3><a class="anchor" aria-hidden="true" id="实现"></a><a href="#实现" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>实现</h3> <pre><code class="hljs css language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">myInstanceof</span>(<span class="hljs-params">target, origin</span>) </span>{ <span class="hljs-keyword">const</span> proto = target.__proto__ <span class="hljs-keyword">if</span> (proto) { <span class="hljs-keyword">if</span> (proto === origin.prototype) { <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span> } <span class="hljs-keyword">else</span> { <span class="hljs-keyword">return</span> myInstanceof(proto, origin) } } <span class="hljs-keyword">else</span> { <span class="hljs-keyword">return</span> <span class="hljs-literal">fal...</span></code></pre>]]></description>
        </item>
        <item>
            <title><![CDATA[模拟实现Object.assign]]></title>
            <link>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/08/14/Object.assign.html</link>
            <guid>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/08/14/Object.assign.html</guid>
            <pubDate>Wed, 14 Aug 2019 06:00:00 GMT</pubDate>
            <description><![CDATA[<h2><a class="anchor" aria-hidden="true" id="objectassign"></a><a href="#objectassign" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>Object.assign</h2> <h3><a class="anchor" aria-hidden="true" id="用法"></a><a href="#用法" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>用法</h3> <p>用于将所有可枚举属性的值从一个或多个源对象复制到目标对象。它将返回目标对象</p> <pre><code class="hljs css language-javascript"><span class="hljs-keyword">const</span> target = { <span class="hljs-attr">a</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">b</span>: <span class="hljs-number">2</span> }; <span class="hljs-keyword">const</span> source = { <span class="hljs-attr">b</span>: <span class="hljs-number">4</span>, <span class="hljs-attr">c</span>: <span class="hljs-number">5</span> }; <span class="hljs-keyword">const</span> returnedTarget = <span class="hljs-built_in">Object</span>.assign(target, source); <span class="hljs-built_in">console</span>.log(target); <span class="hljs-comment">// expected output: Object { a: 1, b: 4, c: 5 }</span> <span class="hljs-built_in">console</span>.lo...</code></pre>]]></description>
        </item>
        <item>
            <title><![CDATA[TypeScript]]></title>
            <link>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/07/14/TypeScript.html</link>
            <guid>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/07/14/TypeScript.html</guid>
            <pubDate>Sun, 14 Jul 2019 06:00:00 GMT</pubDate>
            <description><![CDATA[<h1><a class="anchor" aria-hidden="true" id="安装-typescript"></a><a href="#安装-typescript" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>安装 TypeScript</h1> <p>命令行运行如下命令，全局安装 TypeScript：</p> <pre><code class="hljs css language-bash">npm install -g typescript </code></pre> <p>安装完成后，在控制台运行如下命令，检查安装是否成功：</p> <pre><code class="hljs css language-bash">tsc -V </code></pre> <h1><a class="anchor" aria-hidden="true" id="编写第一个-typescript-程序"></a><a href="#编写第一个-typescript-程序" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>编写第一个 TypeScript 程序</h1> <p>在编辑器，将下面的代码输入到 greeter.ts 文件里：</p> <pre><code class="hljs css language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">greeter</span> (<span class="hljs-params">person</span>) </span>{ <span class="hljs-keyword">return</span> <span class="hljs-string">'Hello, '</span> + person } <span class="hljs-keyword">let</span> user = <span class="hljs-string">'Yee'</span> <span class="hljs-built_in">console</span>.log(greeter(use...</code></pre>]]></description>
        </item>
        <item>
            <title><![CDATA[taro-ui]]></title>
            <link>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/07/12/TaroUi.html</link>
            <guid>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/07/12/TaroUi.html</guid>
            <pubDate>Fri, 12 Jul 2019 06:00:00 GMT</pubDate>
            <description><![CDATA[<h3><a class="anchor" aria-hidden="true" id="样式"></a><a href="#样式" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>样式</h3> <ul> <li>入口</li> </ul> <pre><code class="hljs css language-css">@<span class="hljs-keyword">import</span> <span class="hljs-string">"./style/index.scss"</span>; </code></pre> <ul> <li>小程序<code>page</code>节点默认<code>flex</code>样式</li> </ul> <pre><code class="hljs css language-css"><span class="hljs-selector-class">.page</span> { <span class="hljs-attribute">display</span>: flex; <span class="hljs-attribute">flex-direction</span>: column; <span class="hljs-attribute">box-sizing</span>: border-box; <span class="hljs-attribute">min-height</span>: <span class="hljs-number">100vh</span>; <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#f8f8f8</span>; } </code></pre> <ul> <li>全局<code>view</code>标签元素设置为怪异盒模型</li> </ul> <pre><code class="hljs css language-css"><span class="hljs-selector-tag">view</span> { <span class="hljs-attribute">box-sizing</span>: border-box; } </code></pre> <ul> <li><code>style</code>目录下文件结构 <ul> <li><code>i...</code></li></ul></li></ul>]]></description>
        </item>
        <item>
            <title><![CDATA[收集开源项目好用工具函数]]></title>
            <link>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/07/12/utils.html</link>
            <guid>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/07/12/utils.html</guid>
            <pubDate>Fri, 12 Jul 2019 06:00:00 GMT</pubDate>
            <description><![CDATA[<h3><a class="anchor" aria-hidden="true" id="深度克隆"></a><a href="#深度克隆" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>深度克隆</h3> <p><a href="https://github.com/NervJS/taro/blob/master/packages/taro/src/util.js">源码地址</a></p> <h5><a class="anchor" aria-hidden="true" id="代码"></a><a href="#代码" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>代码</h5> <p>结合<code>while</code>循环和递归实现</p> <pre><code class="hljs css language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">objClone</span> (<span class="hljs-params">jsonObj</span>) </span>{ <span class="hljs-keyword">var</span> buf <span class="hljs-keyword">if</span> (jsonObj <span class="hljs-keyword">instanceof</span> <span class="hljs-built_in">Array</span>) { buf = [] <span class="hljs-keyword">var</span> i = jsonObj.length <span class="hljs-keyword">while</span> (i--) { buf[i] = objClone(jsonObj[i]) } <span class="hljs-keyword">return</span> buf } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (jsonObj <span class="hljs-keyword">instanceof</span> <span class="hljs-built_in">Object</span>) { buf = {} <span class="hljs-keyword">for</span> (<span class="hljs-keyword">va...</span></code></pre>]]></description>
        </item>
        <item>
            <title><![CDATA[读Taro消息机制源码笔记]]></title>
            <link>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/07/11/events.html</link>
            <guid>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/07/11/events.html</guid>
            <pubDate>Thu, 11 Jul 2019 06:00:00 GMT</pubDate>
            <description><![CDATA[<h3><a class="anchor" aria-hidden="true" id="使用"></a><a href="#使用" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>使用</h3> <pre><code class="hljs css language-javascript"><span class="hljs-keyword">import</span> Taro, { Events } <span class="hljs-keyword">from</span> <span class="hljs-string">'@tarojs/taro'</span> <span class="hljs-keyword">const</span> events = <span class="hljs-keyword">new</span> Events() <span class="hljs-comment">// 监听一个事件，接受参数</span> events.on(<span class="hljs-string">'eventName'</span>, (arg) =&gt; { <span class="hljs-comment">// doSth</span> }) <span class="hljs-comment">// 监听同个事件，同时绑定多个 handler</span> events.on(<span class="hljs-string">'eventName'</span>, handler1) events.on(<span class="hljs-string">'eventName'</span>, handler2) events.on(<span class="hljs-string">'eventName...</span></code></pre>]]></description>
        </item>
        <item>
            <title><![CDATA[火爆了的前端面试题]]></title>
            <link>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/07/10/面试题.html</link>
            <guid>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/07/10/面试题.html</guid>
            <pubDate>Wed, 10 Jul 2019 06:00:00 GMT</pubDate>
            <description><![CDATA[<h3><a class="anchor" aria-hidden="true" id="100"></a><a href="#100" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>#<code>100</code></h3> <p>请写出如下代码的打印结果</p> <pre><code class="hljs css language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Foo</span>(<span class="hljs-params"></span>) </span>{ Foo.a = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{ <span class="hljs-built_in">console</span>.log(<span class="hljs-number">1</span>) } <span class="hljs-keyword">this</span>.a = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{ <span class="hljs-built_in">console</span>.log(<span class="hljs-number">2</span>) } } Foo.prototype.a = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{ <span class="hljs-built_in">console</span>.log(<span class="hljs-number">3</span>) } Foo.a = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>{ <span class="hljs-built_in">console</span>.log(<span class="hljs-number">4</span>) } Foo.a(); <span class="hljs-keyword">let</span> obj = <span class="hljs-keyword">new</span> Foo(); obj.a(); Foo.a(); </code></pre> <pre><code class="hljs"><span class="hljs-symbol">4 ...</span></code></pre>]]></description>
        </item>
        <item>
            <title><![CDATA[泛型（TypeScript学习笔记）]]></title>
            <link>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/07/06/泛型.html</link>
            <guid>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/07/06/泛型.html</guid>
            <pubDate>Sat, 06 Jul 2019 06:00:00 GMT</pubDate>
            <description><![CDATA[<h3><a class="anchor" aria-hidden="true" id="泛型"></a><a href="#泛型" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>泛型</h3> <p>解决函数传入参数类型与函数返回值类型一致的问题。</p> <p>一个函数，我希望传入数字，返回数字；传入字符串，返回字符串， 即</p> <pre><code class="hljs css language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fn1</span> (<span class="hljs-params">a: number</span>): <span class="hljs-title">number</span> </span>{ <span class="hljs-keyword">return</span> a + <span class="hljs-number">1</span> } <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fn2</span> (<span class="hljs-params">b: string</span>): <span class="hljs-title">string</span> </span>{ <span class="hljs-keyword">return</span> b + <span class="hljs-string">' :fn2'</span> } </code></pre> <p>有没有支持不同类型的方式，any</p> <pre><code class="hljs css language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fn3</span> (<span class="hljs-params">c: any</span>): <span class="hljs-title">any</span> </span>{ <span class="hljs-keyword">return</span> c } </code></pre> <p>可是使用any，不能保证返回值类型和传入参数类型...</p>]]></description>
        </item>
        <item>
            <title><![CDATA[格式化日期]]></title>
            <link>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/07/06/格式化日期.html</link>
            <guid>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/07/06/格式化日期.html</guid>
            <pubDate>Sat, 06 Jul 2019 06:00:00 GMT</pubDate>
            <description><![CDATA[<h3><a class="anchor" aria-hidden="true" id="代码如下"></a><a href="#代码如下" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>代码如下</h3> <p><a href="https://github.com/didi/cube-ui/blob/dev/src/common/lang/date.js">开源项目链接地址</a></p> <pre><code class="hljs css language-javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">formatType</span>(<span class="hljs-params">type, format, value, regExpAttributes</span>) </span>{ <span class="hljs-keyword">const</span> regExpMap = { <span class="hljs-attr">year</span>: <span class="hljs-string">'(Y+)'</span>, <span class="hljs-attr">month</span>: <span class="hljs-string">'(M+)'</span>, <span class="hljs-attr">date</span>: <span class="hljs-string">'(D+)'</span>, <span class="hljs-attr">hour</span>: <span class="hljs-string">'(h+)'</span>, <span class="hljs-attr">minute</span>: <span class="hljs-string">'(m+)'</span>, <span class="hljs-attr">second</span>: <span class="hljs-string">'(s+)'</span>, <span class="hljs-attr">quarter</span>: <span class="hljs-string">'(q+)'</span>, <span class="hljs-attr">millisecond</span>: <span class="hljs-string">'(S)'</span> } <span class="hljs-keyword">if</span> (<span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(regExpMap[typ...</code></pre>]]></description>
        </item>
        <item>
            <title><![CDATA[枚举（TypeScript学习笔记）]]></title>
            <link>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/07/06/枚举.html</link>
            <guid>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/07/06/枚举.html</guid>
            <pubDate>Sat, 06 Jul 2019 06:00:00 GMT</pubDate>
            <description><![CDATA[<h3><a class="anchor" aria-hidden="true" id="枚举"></a><a href="#枚举" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>枚举</h3> <p><a href="https://codepen.io/stupidWall/pen/pXOQdN?editors=0010">戳我试试</a></p> <h4><a class="anchor" aria-hidden="true" id="数字枚举"></a><a href="#数字枚举" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>数字枚举</h4> <p>假设后台定义三个状态：</p> <p><code>1</code> 待支付 <code>2</code> 待发货 <code>3</code> 已完成</p> <p>前端使用的时候，如果整个项目中到处都是<code>1</code>、<code>2</code>、<code>3</code>, 有个问题就是不够语义，维护起来时间成本也较高， 想办法映射成变量：</p> <pre><code class="hljs css language-javascript">enum Status { outPay = <span class="hljs-number">1</span>, outDelivery = <span class="hljs-number">2</span>, done = <span class="hljs-number">3</span> } </code></pre> <p>当使用都时候，可以判断<code>Status.outPay === status</code>即可</p> <p>针对数字枚举，还有一个反向映射， 即<code>Status[1]</code>值是<code>outPay</code></p> <p>打印出<code>Status</code>可以看到</p> <p><img src="https://raw.githubusercontent.com/stupidWall/liuxiaobai/master/img/blog/2019/20190706195943.jpg" width="600"></p> <h4><a class="anchor" aria-hidden="true" id="字符串枚举"></a><a href="#字符串枚举" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>字符串...</h4>]]></description>
        </item>
        <item>
            <title><![CDATA[React生命周期]]></title>
            <link>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/07/06/react生命周期.html</link>
            <guid>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/07/06/react生命周期.html</guid>
            <pubDate>Sat, 06 Jul 2019 06:00:00 GMT</pubDate>
            <description><![CDATA[<h3><a class="anchor" aria-hidden="true" id="生命周期分两大类"></a><a href="#生命周期分两大类" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>生命周期分两大类</h3> <ul> <li>挂载&amp;卸载 <ul> <li><p>挂载</p> <ul> <li>下面<code>2</code>个函数只会在组件初始化时运行一次</li> <li><code>componentWillMount</code>： 在<code>render</code>函数之前执行， 可以使用<code>setState</code>， 但初始化只会运行一次，所以这里调用没意义，可以在<code>constructor</code>里初始化<code>state</code></li> <li><code>componentDidMount</code> ： 在<code>render</code>函数之后执行， 可以<code>setState</code></li> </ul></li> <li><p>卸载</p> <ul> <li><code>componentWillUnmount</code>： 事件回收或清除定时器等工作</li> </ul></li> </ul></li> </ul> <ul> <li>接收新数据，更新组件 <ul> <li><p>组件自身<code>setS...</code></p></li></ul></li></ul>]]></description>
        </item>
        <item>
            <title><![CDATA[内联样式转对象]]></title>
            <link>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/07/06/parseStyle.html</link>
            <guid>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/07/06/parseStyle.html</guid>
            <pubDate>Sat, 06 Jul 2019 06:00:00 GMT</pubDate>
            <description><![CDATA[<p><a href="https://github.com/NervJS/taro/blob/master/packages/taro-components-rn/src/utils/index.ts">开源项目链接地址</a></p> <h3><a class="anchor" aria-hidden="true" id="parsestyles"></a><a href="#parsestyles" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a><code>parseStyles</code></h3> <p>输入：</p> <p><code>'padding-left:20; display: flex; flex-direction: row; margin-right:20'</code></p> <p>输出：</p> <pre><code class="hljs css language-javascript">{ <span class="hljs-attr">display</span>: <span class="hljs-string">"flex"</span> flexDirection: <span class="hljs-string">"row"</span> marginRight: <span class="hljs-string">"20"</span> paddingLeft: <span class="hljs-string">"20"</span> } </code></pre> <h4><a class="anchor" aria-hidden="true" id="代码如下"></a><a href="#代码如下" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>代码如下</h4> <pre><code class="hljs css language-javascript"><span class="hljs-keyword">const</span> parseStyles = (styles: string = <span class="hljs-string">''</span>): { [key: string]: string ...</code></pre>]]></description>
        </item>
        <item>
            <title><![CDATA[中横线转驼峰变量]]></title>
            <link>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/07/05/驼峰.html</link>
            <guid>https://github.com/stupidWall/liuxiaobai/liuxiaobai/blog/2019/07/05/驼峰.html</guid>
            <pubDate>Fri, 05 Jul 2019 06:00:00 GMT</pubDate>
            <description><![CDATA[<p><a href="https://github.com/didi/cube-ui/blob/dev/src/common/lang/string.js">开源项目链接地址</a></p> <h3><a class="anchor" aria-hidden="true" id="代码如下"></a><a href="#代码如下" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>代码如下：</h3> <pre><code class="hljs css language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">camelize</span> (<span class="hljs-params">str</span>) </span>{ str = <span class="hljs-built_in">String</span>(str) <span class="hljs-keyword">return</span> str.replace(<span class="hljs-regexp">/-(\w)/g</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">m, c</span>) </span>{ <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'m：'</span>,m,<span class="hljs-string">'c：'</span>,c) <span class="hljs-keyword">return</span> c ? c.toUpperCase() : <span class="hljs-string">''</span> }) } </code></pre> <h4><a class="anchor" aria-hidden="true" id="正则-w-g"></a><a href="#正则-w-g" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewbox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>正则<code>/-(\w)/g</code></h4> <ul> <li><code>g</code> 全局匹配</li> <li><code>()</code> 匹配 <code>pattern</code> 并获取这一匹配。所获取的匹配可以从产生的Matches集合得到</li> <li><code>\w</code> 匹配包括...</li></ul>]]></description>
        </item>
    </channel>
</rss>